plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id "io.codearte.nexus-staging" version "0.30.0"
}

group 'io.github.hrdlotom'
version '0.1.9'

repositories {
    mavenCentral()
    maven { url 'http://packages.confluent.io/maven/' }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

nexusStaging {
    serverUrl = "https://s01.oss.sonatype.org/service/local/" //required only for projects registered in Sonatype after 2021-02-24
    username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
    password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
    packageGroup = "io.github.hrdlotom"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'GradleGithubActionsMavenCentral'
            from components.java
            artifact sourcesJar
            artifact javadocJar

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'GradleGithubActionsMavenCentral'
                description = 'A test project to publish to MavenCentral'
                url = 'https://github.com/hrdlotom/GradleGithubActionsMavenCentral'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'hrdlotom'
                        name = 'Tomas Hrdlovics'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/hrdlotom/GradleGithubActionsMavenCentral.git'
                    developerConnection = 'scm:git:ssh://github.com/hrdlotom/GradleGithubActionsMavenCentral.git'
                    url = 'https://github.com/hrdlotom/GradleGithubActionsMavenCentral'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username findProperty("ossrhUsername")?: ''
                password findProperty("ossrhPassword")?: ''
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

test {
    useJUnitPlatform()
}
